[tool.poetry]
name = "vpype"
version = "1.8.0-alpha.0"
description = "The Swiss Army knife of vector graphics for pen plotters"
authors = ["Antoine Beyeler <abeyeler@ab-ware.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/abey79/vpype"
documentation = "https://vpype.readthedocs.io/en/latest/"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Topic :: Artistic Software",
    "Topic :: Multimedia :: Graphics",
]
packages = [
    { include = "vpype" },
    { include = "vpype_cli" },
    { include = "vpype_viewer"},
]
include = [
    "README.md",
    "CHANGELOG.md",
    "LICENSE",
    "vpype/*.toml",
    "vpype/fonts/*.pickle",
    "vpype_viewer/shaders/*.glsl",
    "vpype_viewer/resources/*.png",
    "vpype_viewer/qtviewer/resources/*",
]

[tool.poetry.scripts]
vpype = "vpype_cli.cli:cli"

[tool.poetry.dependencies]
python = ">=3.7, !=3.9.0, <3.10"
attrs = "~21.2.0"
cachetools = "^4.2.2"
click = "~8.0.1"
click-plugins = "~1.1.1"
multiprocess = "^0.70.11"
numpy = "^1.20"
pnoise = "^0.1.0"
Shapely = {extras = ["vectorized"], version = ">=1.7.1,<1.9.0"}
scipy = "^1.6"
setuptools = "^51.0.0"
svgelements = "1.6.4"
svgwrite = "~1.4"
toml = "~0.10.2"

# additional dependencies for the viewer and the `show` command
matplotlib = { version = ">=3.3.2,<3.6.0", optional = true }
glcontext = { version = ">=2.3.2", optional = true }  # 2.3.2 needed to fix #200
moderngl = { version = "^5.6.2", optional = true }
Pillow = { version = "^8.1.0", optional = true }
PySide2 = { version = "^5.15.2", optional = true }

# these needs to be there because of https://github.com/python-poetry/poetry/issues/1145
Sphinx = { version = "^4.0.1", optional = true }
sphinx-click = { version = ">=2.5.0", optional = true }
sphinx-autodoc-typehints = { version = "^1.12.0", optional = true }
sphinx-rtd-theme = { version = ">=1.0.0", optional = true }
recommonmark = { version = ">=0.6,<0.8", optional = true }

[tool.poetry.dev-dependencies]
coverage = {extras = ["toml"], version = ">=5.4"}
pytest = ">=6.2.3"
pytest-cov = ">=2.11.0"
pytest-benchmark = ">=3.2.3"
black = ">=21.5b2"
isort = ">=5.8.0"
pyinstaller = "^4.3"
packaging = ">=20.8"
pytest-mpl = ">=0.12"
mypy = ">=0.901"
types-cachetools = ">=4.2.4"
types-toml = ">=0.1.1"
types-pkg-resources = ">=0.1.2"

[tool.poetry.extras]
docs = ["Sphinx", "sphinx-click", "sphinx-autodoc-typehints", "sphinx-rtd-theme", "recommonmark"]
all = ["matplotlib", "glcontext", "moderngl", "Pillow", "PySide2"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "--mpl --mpl-baseline-path tests/data/baseline --benchmark-disable"

[tool.mypy]
ignore_missing_imports = true
allow_redefinition = true
files = "vpype,vpype_cli,vpype_viewer,tests"

[[tool.mypy.overrides]]
module = "cachetools.keys"
ignore_missing_imports = true  # somehow needed to silence one particular error

[tool.coverage.run]
branch = true
source = ["."]
omit = [
    "*/.tox/*",
    "*/__main__.py",
    "*/setup.py",
    "*/venv*/*",
    "vpype_viewer/qtviewer/*",  # cannot be tested
]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.black]
line-length = 95
target-version = ["py36", "py37", "py38"]

[tool.isort]
profile = "black"
line_length = 95
src_paths = ["vpype", "vpype_cli", "vpype_viewer", "tests"]
