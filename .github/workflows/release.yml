name: Release

on:
  push:
    tags:
      - '*.*.*'

jobs:

  # ----------------------------------------
  gh-release-installer:
    defaults:
      run:
        shell: bash
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pipx install poetry
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        # no caching!
    - name: Install project
      run: poetry install -E all
    - name: Run PyInstaller
      run: |
        VERSION="`poetry version --short`"
        echo "version=${VERSION}" >> $GITHUB_ENV
        poetry run ${GITHUB_WORKSPACE}\\scripts\\build.bat
    - name: Create NSIS installer
      uses: joncloud/makensis-action@v3.7
      with:
        script-file: scripts\\installer_win.nsi
        arguments: /V4 /DVERSION=${{ env.version }}
    - name: Make GH Release
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        files: dist/vpype-${{ env.version }}-setup.exe
        fail_on_unmatched_files: true


  # ----------------------------------------
  pypi-upload:
    runs-on: ubuntu-latest
    needs: [gh-release-installer]
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build artifacts
        run: poetry build
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository_url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          # FIXME
          #password: ${{ secrets.PYPI_TOKEN }}
          # skip_existing: true
          verbose: true
